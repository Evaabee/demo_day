{"ast":null,"code":"var _jsxFileName = \"/Users/rabeyazahanmily/Desktop/demo_day/frontend/src/components/NotificationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/NotificationForm.css';\nimport Button from \"./Button\";\nimport Dropdown from \"./Dropdown\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationForm = ({\n  onSubmit,\n  cryptocurrencies\n}) => {\n  _s();\n  var _cryptocurrencies$;\n  const [selectedCrypto, setSelectedCrypto] = useState(((_cryptocurrencies$ = cryptocurrencies[0]) === null || _cryptocurrencies$ === void 0 ? void 0 : _cryptocurrencies$.id) || \"\");\n  const [notificationType, setNotificationType] = useState(\"Price\");\n  const [thresholdValue, setThresholdValue] = useState(\"\");\n  const [notificationMethod, setNotificationMethod] = useState(\"Email\");\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [emailSuccess, setEmailSuccess] = useState(null);\n  const [emailError, setEmailError] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneSuccess, setPhoneSuccess] = useState(null);\n  const [phoneError, setPhoneError] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:8000\";\n  const validatePhoneNumber = number => {\n    const phoneRegex = /^\\+1\\d{10}$/;\n    return phoneRegex.test(number);\n  };\n  const handleEmailSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setEmailSuccess(null);\n    setEmailError(null);\n    try {\n      await axios.post(`${API_URL}/send-email`, {\n        email\n      });\n      setEmailSuccess(\"Email sent successfully!\");\n    } catch (err) {\n      console.error(\"Error sending email:\", err);\n      setEmailError(\"Failed to send the email. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePhoneNumberSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setPhoneNumber(null);\n    setPhoneSuccess(null);\n    setPhoneError(null);\n\n    // Only make the API call if the notification method is \"Phone Call\" and phone number is valid\n    if (notificationMethod === 'Phone Call') {\n      if (!validatePhoneNumber(phoneNumber)) {\n        // Catch error for invalid phone number\n        setPhoneError('Please enter a valid phone number (+1XXXXXXXXXX).');\n        return; // Stop further execution\n      }\n      try {\n        setLoading(true);\n        const response = await fetch(`${API_URL}/make-call/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            phone_number: phoneNumber\n          })\n        });\n        const result = await response.json();\n\n        // Handle response from backend\n        if (response.ok) {\n          setPhoneSuccess('Phone call request has been triggered!');\n          setPhoneError(null); // Clear any previous error\n        } else {\n          // Handle backend error\n          setPhoneError(result.error || 'Failed to make the call. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error making phone call:', error);\n        setPhoneError('Failed to make the call. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const handleSetAlert = async () => {\n    if (!thresholdValue) {\n      setError(\"Threshold value is required.\");\n      return;\n    }\n\n    // Clear error if validation passes\n    setPhoneError('');\n    const alertData = {\n      crypto_id: selectedCrypto,\n      notification_type: notificationType,\n      threshold_price: parseFloat(thresholdValue),\n      notification_method: notificationMethod,\n      phoneNumber: notificationMethod === 'Phone Call' ? phoneNumber : null // Include phone number only if Phone Call is selected\n    };\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/alerts/`, alertData);\n      console.log(\"Alert created:\", response.data);\n      onSubmit(alertData);\n      console.log(alertData);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error setting alert:\", err);\n      setError(\"Setting alerts is not available at the moment.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const selectedCryptoDetails = cryptocurrencies.find(crypto => crypto.id === selectedCrypto);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Select Cryptocurrency:\",\n      options: cryptocurrencies.map(crypto => ({\n        value: crypto.id,\n        label: crypto.name\n      })),\n      onSelect: setSelectedCrypto,\n      selectedValue: selectedCrypto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), selectedCryptoDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Market Cap: $\", selectedCryptoDetails.market_cap.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hourly Price: $\", selectedCryptoDetails.hourly_price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hourly Percentage Change: \", selectedCryptoDetails.hourly_percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Updated:\", \" \", new Date(selectedCryptoDetails.time_updated).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Get notified by change in:\",\n      options: [{\n        value: \"Price\",\n        label: \"Price\"\n      }, {\n        value: \"Percentage\",\n        label: \"Percentage\"\n      }],\n      onSelect: setNotificationType,\n      selectedValue: notificationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Threshold:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: thresholdValue,\n        onChange: e => setThresholdValue(e.target.value),\n        step: \"any\",\n        placeholder: \"Enter threshold value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Notification Method\",\n      options: [{\n        value: \"Email\",\n        label: \"Email\"\n      }, {\n        value: \"Phone Call\",\n        label: \"Phone Call\"\n      }\n      //{ value: \"SMS\", label: \"SMS\" },\n      ],\n      onSelect: setNotificationMethod,\n      selectedValue: notificationMethod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), notificationMethod === \"Email\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEmailSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"ex@example.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Sending...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), emailSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: emailSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 28\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), notificationMethod === 'Phone Call' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePhoneNumberSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"+1xxxxxxxxxx\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || notificationMethod === 'Phone Call' && !validatePhoneNumber(phoneNumber),\n          children: loading ? \"Calling...\" : \"Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), phoneNumber && !validatePhoneNumber(phoneNumber) && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"0.9em\"\n          },\n          children: phoneError || \"Please enter a valid phone number (+1xxxxxxxxxx).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), phoneSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\",\n          fontSize: \"0.9em\"\n        },\n        children: phoneSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 28\n      }, this), phoneError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: phoneError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: loading ? \"Setting Alert...\" : \"Set Alert!\",\n      onClick: handleSetAlert,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationForm, \"yuaUbtAbHDdaFQ5QhJ+EiG8GMQg=\");\n_c = NotificationForm;\nexport default NotificationForm;\nvar _c;\n$RefreshReg$(_c, \"NotificationForm\");","map":{"version":3,"names":["React","useState","Button","Dropdown","axios","jsxDEV","_jsxDEV","NotificationForm","onSubmit","cryptocurrencies","_s","_cryptocurrencies$","selectedCrypto","setSelectedCrypto","id","notificationType","setNotificationType","thresholdValue","setThresholdValue","notificationMethod","setNotificationMethod","email","setEmail","loading","setLoading","error","setError","emailSuccess","setEmailSuccess","emailError","setEmailError","phoneNumber","setPhoneNumber","phoneSuccess","setPhoneSuccess","phoneError","setPhoneError","API_URL","process","env","REACT_APP_API_URL","validatePhoneNumber","number","phoneRegex","test","handleEmailSubmit","e","preventDefault","post","err","console","handlePhoneNumberSubmit","response","fetch","method","headers","body","JSON","stringify","phone_number","result","json","ok","handleSetAlert","alertData","crypto_id","notification_type","threshold_price","parseFloat","notification_method","log","data","selectedCryptoDetails","find","crypto","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","options","map","value","name","onSelect","selectedValue","market_cap","toLocaleString","hourly_price","hourly_percentage","Date","time_updated","type","onChange","target","step","placeholder","required","disabled","style","color","fontSize","text","onClick","_c","$RefreshReg$"],"sources":["/Users/rabeyazahanmily/Desktop/demo_day/frontend/src/components/NotificationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/NotificationForm.css';\nimport Button from \"./Button\";\nimport Dropdown from \"./Dropdown\";\nimport axios from \"axios\";\n\nconst NotificationForm = ({ onSubmit, cryptocurrencies }) => {\n  const [selectedCrypto, setSelectedCrypto] = useState(cryptocurrencies[0]?.id || \"\");\n  const [notificationType, setNotificationType] = useState(\"Price\");\n  const [thresholdValue, setThresholdValue] = useState(\"\");\n  const [notificationMethod, setNotificationMethod] = useState(\"Email\");\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [emailSuccess, setEmailSuccess] = useState(null);\n  const [emailError, setEmailError] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneSuccess, setPhoneSuccess] = useState(null);\n  const [phoneError, setPhoneError] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:8000\";\n\n  const validatePhoneNumber = (number) => {\n    const phoneRegex = /^\\+1\\d{10}$/;\n    return phoneRegex.test(number);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setEmailSuccess(null);\n    setEmailError(null);\n\n    try {\n      await axios.post(`${API_URL}/send-email`, { email });\n      setEmailSuccess(\"Email sent successfully!\");\n    } catch (err) {\n      console.error(\"Error sending email:\", err);\n      setEmailError(\"Failed to send the email. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePhoneNumberSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setPhoneNumber(null);\n    setPhoneSuccess(null);\n    setPhoneError(null);\n\n    // Only make the API call if the notification method is \"Phone Call\" and phone number is valid\n    if (notificationMethod === 'Phone Call') {\n      if (!validatePhoneNumber(phoneNumber)) {\n        // Catch error for invalid phone number\n        setPhoneError('Please enter a valid phone number (+1XXXXXXXXXX).');\n        return; // Stop further execution\n      }\n\n      try {\n        setLoading(true);\n        const response = await fetch(`${API_URL}/make-call/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ phone_number: phoneNumber }),\n        });\n\n        const result = await response.json();\n\n        // Handle response from backend\n        if (response.ok) {\n          setPhoneSuccess('Phone call request has been triggered!');\n          setPhoneError(null); // Clear any previous error\n        } else {\n          // Handle backend error\n          setPhoneError(result.error || 'Failed to make the call. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error making phone call:', error);\n        setPhoneError('Failed to make the call. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleSetAlert = async () => {\n    if (!thresholdValue) {\n      setError(\"Threshold value is required.\");\n      return;\n    }\n\n    // Clear error if validation passes\n    setPhoneError('');\n\n    const alertData = {\n      crypto_id: selectedCrypto,\n      notification_type: notificationType,\n      threshold_price: parseFloat(thresholdValue),\n      notification_method: notificationMethod,\n      phoneNumber: notificationMethod === 'Phone Call' ? phoneNumber : null, // Include phone number only if Phone Call is selected\n    };\n\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/alerts/`, alertData);\n      console.log(\"Alert created:\", response.data);\n      onSubmit(alertData);\n      console.log(alertData);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error setting alert:\", err);\n      setError(\"Setting alerts is not available at the moment.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const selectedCryptoDetails = cryptocurrencies.find(\n    (crypto) => crypto.id === selectedCrypto\n  );\n\n  return (\n    <div className=\"notification-form\">\n      <h2>Set Notification</h2>\n\n      {/* Dropdown for Cryptocurrency Selection */}\n      <Dropdown\n        label=\"Select Cryptocurrency:\"\n        options={cryptocurrencies.map((crypto) => ({\n          value: crypto.id,\n          label: crypto.name,\n        }))}\n        onSelect={setSelectedCrypto}\n        selectedValue={selectedCrypto}\n      />\n\n      {/* Display Selected Cryptocurrency Details */}\n      {selectedCryptoDetails && (\n        <div className=\"crypto-details\">\n          <p>\n            Market Cap: ${selectedCryptoDetails.market_cap.toLocaleString()}\n          </p>\n          <p>Hourly Price: ${selectedCryptoDetails.hourly_price}</p>\n          <p>\n            Hourly Percentage Change: {selectedCryptoDetails.hourly_percentage}%\n          </p>\n          <p>\n            Last Updated:{\" \"}\n            {new Date(selectedCryptoDetails.time_updated).toLocaleString()}\n          </p>\n        </div>\n      )}\n\n      {/* Dropdown for Notification Type */}\n      <Dropdown\n        label=\"Get notified by change in:\"\n        options={[\n          { value: \"Price\", label: \"Price\" },\n          { value: \"Percentage\", label: \"Percentage\" },\n        ]}\n        onSelect={setNotificationType}\n        selectedValue={notificationType}\n      />\n\n      {/* Input for Threshold */}\n      <div className=\"input-group\">\n        <label>Set Threshold:</label>\n        <input\n          type=\"number\"\n          value={thresholdValue}\n          onChange={(e) => setThresholdValue(e.target.value)}\n          step=\"any\"\n          placeholder=\"Enter threshold value\"\n        />\n      </div>\n\n      {/* Dropdown for Notification Method */}\n      <Dropdown\n        label=\"Notification Method\"\n        options={[\n          { value: \"Email\", label: \"Email\" },\n          { value: \"Phone Call\", label: \"Phone Call\" },\n          //{ value: \"SMS\", label: \"SMS\" },\n        ]}\n        onSelect={setNotificationMethod}\n        selectedValue={notificationMethod}\n      />\n\n      {/* Dynamically Render Email Input if \"Email\" is Selected */}\n      {notificationMethod === \"Email\" && (\n        <div className=\"email-section\">\n          <form onSubmit={handleEmailSubmit}>\n            <input\n              type=\"email\"\n              placeholder=\"ex@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <button type=\"submit\" disabled={loading}>\n              {loading ? \"Sending...\" : \"Send\"}\n            </button>\n          </form>\n          {emailSuccess && <p style={{ color: \"green\" }}>{emailSuccess}</p>}\n          {emailError && <p style={{ color: \"red\" }}>{emailError}</p>}\n        </div>\n      )}\n\n      {/* Conditional Input for Phone Number */}\n      {notificationMethod === 'Phone Call' && (\n        <div className=\"phone-section\">\n          <form onSubmit={handlePhoneNumberSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"+1xxxxxxxxxx\"\n              value={phoneNumber}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              required\n            />\n            {/* Button is disabled if phone number is invalid or loading */}\n            <button type=\"submit\" disabled={loading || (notificationMethod === 'Phone Call' && !validatePhoneNumber(phoneNumber))}>\n              {loading ? \"Calling...\" : \"Call\"}\n            </button>\n\n            {/* Only show the error if the phone number is invalid and has been entered */}\n            {phoneNumber && !validatePhoneNumber(phoneNumber) && (\n              <p style={{ color: \"red\", fontSize: \"0.9em\" }}>\n                {phoneError || \"Please enter a valid phone number (+1xxxxxxxxxx).\"}\n              </p>\n            )}\n          </form>\n          {phoneSuccess && <p style={{ color: \"green\", fontSize: \"0.9em\" }}>{phoneSuccess}</p>}\n          {phoneError && <p style={{ color: \"red\" }}>{phoneError}</p>}\n        </div>\n      )}\n      {/* Disaply Error message */}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {/* Submit Button */}\n      <Button\n        text={loading ? \"Setting Alert...\" : \"Set Alert!\"}\n        onClick={handleSetAlert}\n        disabled={loading}\n      />\n    </div>\n  );\n};\n\nexport default NotificationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}